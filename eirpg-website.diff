diff -aburN eirpg-website/_header.php website/_header.php
--- eirpg-website/_header.php	2008-02-12 11:06:56.000000000 +0100
+++ website/_header.php	2008-02-14 14:36:50.000000000 +0100
@@ -1,22 +1,5 @@
 <?php
-error_reporting(E_ALL);
-
-require 'includes/functions.php';
-require 'includes/ew_config.php';
-
-$ew_config = new ew_config(require 'config.inc.php',true);
-$eb_config = new ew_config(parse_ini_file($ew_config->config_file,true));
-
-$ew_config->merge($eb_config);
-
-unset($eb_config);
-
-$db = new PDO('mysql:host='.$ew_config->SQL->host.';dbname='.$ew_config->SQL->base, $ew_config->SQL->login, $ew_config->SQL->password);
-
-$db->setAttribute(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, true);
-
-define('EW_GLOBALTITLE',$ew_config->overall_title);
-
+    require_once '_init.php';
 ?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
@@ -105,6 +88,23 @@
 	}
 	
 	form div.spacer { clear: both; }
+
+	table.ListePerso {
+		width: 800px;
+	}
+	table.ListePerso td, table.ListePerso th {
+		padding: 0 10px;
+		border: 1px #CCC solid;
+		text-align: center;
+	}
+
+       a.arrow { text-decoration: none; }
+
+	a.small {
+		color: #999;
+		font-size: small;
+		text-decoration: none;
+	}
 	/* ]]> */
 	</style>
 	
@@ -114,8 +114,8 @@
 <div id="menu-top">
 <ul>
 	<li class="premier"><a href="index.php">Accueil</a></li>
-	<li><a href="top10.php">Le top 10</a></li>
-	<li><a href="flop10.php">Le flop 10</a></li>
-	<li><a href="joueurs.php">Liste des joueurs</a></li>
+	<li><a href="classement.php?top=10">Le top 10</a></li>
+	<li><a href="classement.php?flop=10">Le flop 10</a></li>
+	<li><a href="classement.php">Classement des personnages</a></li>
 </ul>
 </div>
diff -aburN eirpg-website/_init.php website/_init.php
--- eirpg-website/_init.php	1970-01-01 01:00:00.000000000 +0100
+++ website/_init.php	2008-02-14 14:11:13.000000000 +0100
@@ -0,0 +1,19 @@
+<?php
+  error_reporting(E_ALL);
+
+  require_once 'includes/functions.php';
+  require_once 'includes/ew_config.php';
+
+  $ew_config = new ew_config(require 'config.inc.php',true);
+  $eb_config = new ew_config(parse_ini_file($ew_config->config_file,true));
+
+  $ew_config->merge($eb_config);
+
+  unset($eb_config);
+
+  $db = new PDO('mysql:host='.$ew_config->SQL->host.';dbname='.$ew_config->SQL->base, $ew_config->SQL->login, $ew_config->SQL->password);
+
+  $db->setAttribute(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, true);
+
+  define('EW_GLOBALTITLE',$ew_config->overall_title);
+?>
\ No newline at end of file
diff -aburN eirpg-website/classement.php website/classement.php
--- eirpg-website/classement.php	1970-01-01 01:00:00.000000000 +0100
+++ website/classement.php	2008-02-14 14:35:51.000000000 +0100
@@ -0,0 +1,29 @@
+<?php
+    require_once '_init.php';
+    require_once 'includes/ew_paginate.php';
+    require_once 'includes/ew_classement.php';
+
+    if (isset($_GET['top']))   $params['top']   = intval($_GET['top']);
+    if (isset($_GET['flop']))  $params['flop']  = intval($_GET['flop']);
+    if (isset($_GET['sort']))  $params['sort']  = $_GET['sort'];
+    if (isset($_GET['order'])) $params['order'] = $_GET['order'];
+    $params['arrows']      = array('up' => '&#9660;', 'down' => '&#9650;', 'class' => 'arrow');
+    $params['db']          =& $db;
+
+    $tplList['start']      = '<h1>{title}</h1>
+<div id="users-list">
+{pagination}<table class="ListePerso"><tr><th>ID{aID}</th><th>Personnage{aNom}</th><th>Class{aClass}</th><th>Niveau{aNiveau}</th><th>Prochain niveau dans{aTTL}</th><th><acronym title="Somme d\'objets">S.O.</acronym>{aSO}</th></tr>';
+    $tplList['items']      = '<tr><td>{id}</td><td><a href="joueur.php?Nom={Nom}">{Nom}</a></td><td>{Class}</td><td>{Niveau}</td><td>{TTL}</td><td>{SO}</td></tr>';
+    $tplList['end']        = '</table>
+{nbpersos}<div>';
+    $tplList['pagination'] = "<p>{pages}</p>\n";
+    $tplList['nbpersos']   = "<p>Nombre de personnages : {persos}</p>\n";
+
+    $ew_classement = new ew_classement($params, $tplList);
+    $title         = $ew_classement->title;
+
+    require '_header.php';
+    echo $ew_classement->getPersosList().'
+    <p><a class="small" href="xml.php?'.$ew_classement->getVars().'">[Obtenir en XML]</a></p>';
+    require '_footer.php';
+?>
\ No newline at end of file
diff -aburN eirpg-website/config.inc.php website/config.inc.php
--- eirpg-website/config.inc.php	2008-02-12 11:06:56.000000000 +0100
+++ website/config.inc.php	2008-02-11 00:19:34.000000000 +0100
@@ -1,8 +1,8 @@
 <?php
 
 return array (
-	'config_file'   => '/home/xrogaan/EIRPG-0.6.0/irpg.conf',
-	'baseurl'       => 'http://127.0.0.1/eirpg-website/',
+	'config_file'   => '/home/eirpg/eirpg/irpg.conf',
+	'baseurl'       => '',
 	'users_by_page' => 30,
-	'overall_title' => 'EIRPG',
+	'overall_title' => 'eIRPG',
 ) ;
diff -aburN eirpg-website/flop10.php website/flop10.php
--- eirpg-website/flop10.php	2008-02-12 11:06:56.000000000 +0100
+++ website/flop10.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,21 +0,0 @@
-<?php
-$title = 'Flop 10 des joueurs';
-require('_header.php');
-?>
-<h1>Flop 10 joueurs</h1>
-<div id="top-list">
-<p>Le top 10 des plus mauvais.</p>
-<ul>
-<?php
-$query = "SELECT Nom, Class, Level, Next FROM Personnages ORDER BY Level DESC, Next DESC LIMIT 10";
-foreach ($db->query($query) as $row) {
-	$s = convSecondes($row["Next"]);
-	printf ("\t<li>Joueur <a href=\"joueur.php?Nom=%1\$s\">%1\$s</a>, le %2\$s de niveau %3\$d. Prochain niveau dans %4\$s</li>\n", utf8_encode($row["Nom"]), utf8_encode($row["Class"]),$row["Level"],$s);
-}
-
-?>
-</ul>
-</div>
-<?php
-require('_footer.php');
-?>
\ No newline at end of file
diff -aburN eirpg-website/includes/ew_classement.php website/includes/ew_classement.php
--- eirpg-website/includes/ew_classement.php	1970-01-01 01:00:00.000000000 +0100
+++ website/includes/ew_classement.php	2008-02-15 02:09:27.000000000 +0100
@@ -0,0 +1,171 @@
+<?php
+  /*
+   * PHP version 5
+   * 
+   * @copyright  Copyright (C) 2008 cedricpc
+   * @author     cedricpc <cedricpc@cedricpc.net>
+   * @license    http://www.opensource.org/licenses/mit-license.html MIT License
+   * @created    Wednesday 13 February 2008 @ 21:30 (CET)
+   * @modified   Friday    15 February 2008 @ 02:05 (CET)
+   */
+
+  class ew_classement {
+      //Variables privées.
+      private $flop;      //(Int) Même chose que si dessus mais en mode Flop à condition que le mode Top de soit pas actif.
+      private $maxPersos; //(Int) Nombre de personnage par page - la class ew_paginate doit déjà être incluse.
+      private $top;       //(Int) Passe en mode Top si sa valeur est > 0 et affiche cette quantité de personnages.
+      private $order;     //(Str) Ordre de tri : asc(endant) ou desc(endant).
+      private $prefix;    //(Str) Préfixe de la base de donnée de eIRPG.
+      private $sort;      //(Str) Critère de trie : id, nom, class, niveau, ttl et so.
+      private $arrows;    //(Arr) Tableau contenant les flèches - texte ou image... Clés à définir : up, down et class.
+      private $tplList;   //(Arr) Tableau contenant les templates... Clés à définir : start, items, end ; Facultatives : pagination et nbpersos.
+      private $db;        //(Obj) Référence vers l'objet de la base de donnée.
+
+      //Variables publiques.
+      public $title;      //(Str) Titre de la page.
+      public $varPage;    //(Arr) Variables de la page.
+
+
+      public function __construct($params, $tplList) {
+          if (! is_array($params))  $params  = array();
+
+          if (array_key_exists('db', $params)) $this->db = $params['db'];
+
+          $this->tplList   = is_array($tplList) ? $tplList : array();
+          $this->top       = isset($params['top']) ? intval($params['top']) : 0;
+          $this->flop      = isset($params['flop']) ? intval($params['flop']) : 0;
+          $this->sort      = Null;
+          $this->order     = Null;
+          $this->prefix    = isset($params['prefix']) ? $params['prefix'] : '';
+          $this->maxPersos = isset($params['maxPersos']) ? intval($params['maxPersos']) : 30;
+          $this->varPage   = array();
+          $this->arrows    = isset($params['arrows']) ? $params['arrows'] : array();
+
+          if (! empty($this->top)) {
+              $this->flop      = 0;
+              $this->title     = 'Top '.$this->top.' des joueurs.';
+              $this->varPage[] = 'top='.$this->top;
+          }
+          elseif (! empty($flop)) {
+              $this->title     = 'Flop '.$this->flop.' des joueurs.';
+              $this->varPage[] = 'flop='.$this->flop;
+          }
+          else {
+              $this->sort  = isset($params['sort']) ? $params['sort'] : Null;
+              $this->order = isset($params['order']) ? $params['order'] : Null;
+              $this->title = 'Classement des joueurs';
+              if (! empty($this->sort))  $this->varPage[] = 'sort='.$this->sort;
+              if (! empty($this->order)) $this->varPage[] = 'order='.$this->order;
+          }
+      }
+
+      public function loadDB($db) {
+          $this->db = $db;
+      }
+
+      public function getVars() {
+          return implode('&amp;', $this->varPage);
+      }
+
+      public function getURI() {
+          $vars = $this->getVars();
+          return $_SERVER['SCRIPT_NAME'].(! empty($vars) ? '?'.$vars : '');
+      }
+
+      public function getPersosList() {
+          if ((empty($this->top)) && (empty($this->flop))) {
+              $query      = 'SELECT COUNT(*) as `elems` FROM `'.$this->prefix.'Personnages`';
+              $result     = $this->db->query($query);
+              $nbPerso    = $result->fetch(PDO::FETCH_NUM);
+
+              if ((class_exists('ew_paginate')) && ($this->maxPersos > 0)) {
+                  $pages      = new ew_paginate($nbPerso[0], $this->maxPersos);
+                  $pagination = $pages->paginate($this->getURI());
+              }
+
+              switch ($this->sort) {
+                  case 'nom':
+                      $orderBy = '`Nom` %1$s';
+                      break;
+                  case 'class':
+                      $orderBy = '`Class` %1$s';
+                      break;
+                  case 'ttl':
+                      $orderBy = '`Next` %1$s';
+                      break;
+                  case 'so':
+                      $orderBy = '`SommeObjets` %1$s';
+                      break;
+                  case 'id':
+                      $orderBy = '`Id_Personnages` %1$s';
+                      break;
+                  default:
+                      $sort    = 'niveau';
+                      $orderBy = '`Level` %1$s, `Next` %2$s';
+                      break;
+              }
+              $orderBy = sprintf($orderBy, ($this->order == 'asc' ? 'ASC' : 'DESC'), ($this->order == 'asc' ? 'DESC' : 'ASC')); 
+
+              $query = 'SELECT `Id_Personnages`, `Nom`, `Class`, `p`.`Level`, `Next`, SUM(`o`.`Level`) AS `SommeObjets`
+                        FROM `'.$this->prefix.'Personnages` AS `p`
+                        LEFT JOIN `'.$this->prefix.'Objets` AS `o` ON `Id_Personnages` = `Pers_Id`
+                        GROUP BY `Id_Personnages`
+                        ORDER BY '.$orderBy.'
+                        '.(isset($pages) ? $pages->get_sql_limit_statement() : 'LIMIT '.$this->maxPersos);
+
+              $items = '';
+              foreach ($this->db->query($query) as $row) {
+                  $secondes = convSecondes($row['Next']);
+                  $searchItems  = array('{id}', '{nom}', '{class}', '{niveau}', '{ttl}', '{so}');
+                  $replaceItems = array($row['Id_Personnages'], htmlentities($row['Nom']), htmlentities($row['Class']), $row['Level'], $secondes, $row['SommeObjets']);
+                  $items       .= str_ireplace($searchItems, $replaceItems, $this->tplList['items']."\n");
+              }
+          }
+          else {
+              $query = 'SELECT `Id_Personnages`, `Nom`, `Class`, `p`.`Level`, `Next`, SUM(`o`.`Level`) AS `SommeObjets`
+                        FROM `'.$this->prefix.'Personnages` AS `p`
+                        LEFT JOIN `'.$this->prefix.'Objets` AS `o` ON `Id_Personnages` = `Pers_Id`
+                        GROUP BY `Id_Personnages`
+                        ORDER BY `Level` '.(! empty($this->top) ? 'DESC' : 'ASC').', `Next` '.(! empty($this->top) ? 'ASC' : 'DESC').' 
+                        LIMIT '.(! empty($this->top) ? $this->top : $this->flop);
+
+              $items = '';
+              foreach ($this->db->query($query) as $row) {
+                  $secondes = convSecondes($row['Next']);
+                  $searchItems  = array('{id}', '{nom}', '{class}', '{niveau}', '{ttl}', '{so}');
+                  $replaceItems = array($row['Id_Personnages'], htmlentities($row['Nom']), htmlentities($row['Class']), $row['Level'], $secondes, $row['SommeObjets']);
+                  $items       .= str_ireplace($searchItems, $replaceItems, $this->tplList['items']."\n");
+              }
+          }
+
+          $search  = array('{title}', '{nbpersos}', '{persos}', '{pagination}', '{pages}', '{aid}', '{anom}', '{aclass}', '{aniveau}', '{attl}', '{aso}');
+          $replace = array(
+              $this->title,
+              (isset($this->tplList['nbpersos']) && isset($nbPersos) ? $this->tplList['nbpersos'] : ''),
+              (isset($nbPersos) ? $nbPersos[0] : ''),
+              (isset($this->tplList['pagination']) && isset($pagination) ? $this->tplList['pagination'] : ''),
+              (isset($pagination) ? $pagination : ''),
+              $this->getArrows('id'),
+              $this->getArrows('nom'),
+              $this->getArrows('class'),
+              $this->getArrows('niveau'),
+              $this->getArrows('ttl'),
+              $this->getArrows('so')
+          );
+          $return  = str_ireplace($search, $replace, $this->tplList['start']."\n".$items.$this->tplList['end']);
+
+          return $return;
+      }
+
+      public function getArrows($sort) {
+          $cSort = (empty($this->sort)) || (! preg_match('!^id|nom|class|niveau|ttl|so$!', $this->sort)) ? 'niveau' : $this->sort;
+          $uri   = $_SERVER['SCRIPT_NAME'];
+
+          $return  = ' ';
+          $return .= ($sort != $cSort) || ($this->order != 'asc') && empty($this->flop) ? '<a class="'.$this->arrows['class'].'" href="'.$uri.'?sort='.$sort.'&amp;order=asc">'.$this->arrows['down'].'</a>' : '';
+          $return .= ($sort != $cSort) || ($this->order == 'asc') || (! empty($this->flop)) ? '<a class="'.$this->arrows['class'].'" href="'.$uri.'?sort='.$sort.'&amp;order=desc">'.$this->arrows['up'].'</a>' : '';
+              
+          return $return;
+      }
+  }
+?>
\ No newline at end of file
diff -aburN eirpg-website/includes/ew_paginate.php website/includes/ew_paginate.php
--- eirpg-website/includes/ew_paginate.php	2008-02-12 11:06:56.000000000 +0100
+++ website/includes/ew_paginate.php	2008-02-13 14:39:20.000000000 +0100
@@ -61,17 +61,18 @@
 		if ($this->number_of_pages == 1) {
 			return "Page : 1.";
 		} else {
+                     $pageurl = strpos($pageurl, '?') ? $pageurl.'&amp;' : $pageurl.'?';
 			$i=1;
-			$txt = ($this->current_page === 1) ? '' : '&lt; <a href="'.$pageurl.'?'.$this->page_variable.'='.($this->current_page-1).'">prÃ©cÃ©dent</a> | ';
+			$txt = ($this->current_page === 1) ? '' : '&lt; <a href="'.$pageurl.$this->page_variable.'='.($this->current_page-1).'">prÃ©cÃ©dent</a> | ';
 			while($i < $this->number_of_pages) {
 				if ($i == $this->current_page) {
 					$txt.= "page $i, ";
 				} else {
-					$txt.= '<a href="'.$pageurl.'?'.$this->page_variable.'='.$i.'" class="paginator">page '.$i.'</a>, ';
+					$txt.= '<a href="'.$pageurl.$this->page_variable.'='.$i.'" class="paginator">page '.$i.'</a>, ';
 				}
 				$i++;
 			}
-			return substr($txt,0,-2).(($this->number_of_pages > $this->current_page) ? ' | <a href="'.$pageurl.'?'.$this->page_variable.'='.($this->current_page+1).'">Suivant</a> &gt; ':'').'.';
+			return substr($txt,0,-2).(($this->number_of_pages > $this->current_page) ? ' | <a href="'.$pageurl.$this->page_variable.'='.($this->current_page+1).'">Suivant</a> &gt; ':'').'.';
 		}
 	}
 	
diff -aburN eirpg-website/top10.php website/top10.php
--- eirpg-website/top10.php	2008-02-12 11:06:56.000000000 +0100
+++ website/top10.php	1970-01-01 01:00:00.000000000 +0100
@@ -1,20 +0,0 @@
-<?php
-$title = 'Top 10 des joueurs';
-require('_header.php');
-?>
-<h1>Top 10 joueurs</h1>
-<div id="top-list">
-<ul>
-<?php
-$query = "SELECT Nom, Class, Level, Next FROM Personnages ORDER BY Level DESC, Next ASC LIMIT 10";
-foreach ($db->query($query) as $row) {
-	$s = convSecondes($row["Next"]);
-	printf ("\t<li>Joueur <a href=\"joueur.php?Nom=%1\$s\">%1\$s</a>, le %2\$s de niveau %3\$d. Prochain niveau dans %4\$s</li>\n", utf8_encode($row["Nom"]), utf8_encode($row["Class"]),$row["Level"],$s);
-}
-
-?>
-</ul>
-</div>
-<?php
-require('_footer.php');
-?>
diff -aburN eirpg-website/xml.php website/xml.php
--- eirpg-website/xml.php	1970-01-01 01:00:00.000000000 +0100
+++ website/xml.php	2008-02-14 14:48:03.000000000 +0100
@@ -0,0 +1,28 @@
+<?php
+    require_once '_init.php';
+    require_once 'includes/ew_paginate.php';
+    require_once 'includes/ew_classement.php';
+
+    if (isset($_GET['top']))   $params['top']   = intval($_GET['top']);
+    if (isset($_GET['flop']))  $params['flop']  = intval($_GET['flop']);
+    if (isset($_GET['sort']))  $params['sort']  = $_GET['sort'];
+    if (isset($_GET['order'])) $params['order'] = $_GET['order'];
+    $params['arrows']      = array('up' => '&#9660;', 'down' => '&#9650;', 'class' => 'arrow');
+    $params['db']          =& $db;
+
+    $tplList['start']      = '<?xml version="1.1" encoding="UTF-8" standalone="yes" ?>
+<eirpg>
+  <title>{title}</title>';
+    $tplList['items']      = '  <personnage>
+    <id>{ID}</id>
+    <nom>{Nom}</nom>
+    <class>{Class}</class>
+    <niveau>{Niveau}</niveau>
+    <ttl>{TTL}</ttl>
+    <so>{SO}</so>
+  </personnage>';
+    $tplList['end']        = '</eirpg>';
+
+    $ew_classement = new ew_classement($params, $tplList);
+    echo $ew_classement->getPersosList();
+?>
\ No newline at end of file
